# Cat√°logo de Livros Inteligente com Agentes de IA

# Imports
import re
import streamlit as st
import pandas as pd
from phi.agent import Agent
from phi.model.groq import Groq
from phi.tools.duckduckgo import DuckDuckGo
from phi.tools.newspaper_tools import NewspaperTools
from dotenv import load_dotenv

# Carrega o arquivo de vari√°veis de ambiente
load_dotenv()

########## Agentes de IA ##########

# Agente para buscar informa√ß√µes sobre livros
dsa_agente_info_livros = Agent(
    name="Agente de Informa√ß√µes de Livros",
    model=Groq(id="deepseek-r1-distill-llama-70b"),
    tools=[DuckDuckGo(), NewspaperTools()],
    instructions=[
        "Forne√ßa informa√ß√µes concisas sobre o livro incluindo:",
        "- T√≠tulo e autor",
        "- Sinopse resumida (m√°ximo 5 frases)",
        "- G√™nero liter√°rio",
        "- N√∫mero de p√°ginas",
        "- Pre√ßo m√©dio estimado (formato: R$ XXX,XX)",
        "N√ÉO inclua fontes ou refer√™ncias externas"
    ],
    show_tool_calls=True,
    markdown=True
)

# Agente para recomenda√ß√µes de livros
dsa_agente_recomendacoes = Agent(
    name="Agente de Recomenda√ß√µes",
    model=Groq(id="deepseek-r1-distill-llama-70b"),
    tools=[DuckDuckGo(), NewspaperTools()],
    instructions=[
        "INSTRU√á√ïES ESTRITAS:",
        "1. Recomende EXATAMENTE 10 livros similares ao solicitado",
        "2. Para cada livro, forne√ßa APENAS:",
        "   - T√≠tulo em negrito",
        "   - Autor",
        "   - G√™nero liter√°rio",
        "   - Pre√ßo m√©dio estimado (formato: R$ XX,XX)",
        "   - Breve resumo sobre o livro (maximo 5 frases)",
        "   - Breve motivo da recomenda√ß√£o (1 frase)",
        "3. Formate como lista markdown simples",
        "4. N√ÉO mostre seu processo de pensamento",
        "5. N√ÉO inclua links ou fontes",
        "6. N√ÉO explique como chegou √†s recomenda√ß√µes",
        "7. APENAS liste os livros no formato solicitado"
    ],
    show_tool_calls=False,
    markdown=True
)

# Agente coordenador
multi_ai_agent = Agent(
    team=[dsa_agente_info_livros, dsa_agente_recomendacoes],
    model=Groq(id="deepseek-r1-distill-llama-70b"),
    instructions=[
        "Coordene a equipe de agentes para fornecer uma experi√™ncia completa ao usu√°rio",
        "Garanta que todas as informa√ß√µes solicitadas sejam fornecidas",
        "Formate a sa√≠da de maneira organizada e agrad√°vel"
    ],
    show_tool_calls=True,
    markdown=True
)

########## App Web ##########

# Configura√ß√£o da p√°gina do Streamlit
st.set_page_config(
    page_title="Cat√°logo Inteligente de Livros da Sarah", 
    page_icon="üìö", 
    layout="wide",
    menu_items={
        'About': "Cat√°logo de Livros Inteligente da Sarah, desenvolvido pelo seu namorado"
    }
)

# CSS personalizado
st.markdown("""
<style>
    .stApp {
        background-color: #f5f5f5;
    }
    .title {
        color: #4a4a4a;
        text-align: center;
    }
    .stButton>button {
        background-color: #4a8cff;
        color: white;
        border-radius: 5px;
        padding: 10px 24px;
    }
    .stTextInput>div>div>input {
        border-radius: 5px;
        padding: 10px;
    }
    .book-card {
        background-color: white;
        border-radius: 10px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }
    .price-card {
        background-color: #f0f8ff;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 15px;
    }
    .recommendation-card {
        background-color: #fffaf0;
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 15px;
    }
</style>
""", unsafe_allow_html=True)

# Barra Lateral com instru√ß√µes
st.sidebar.title("üìö Cat√°logo Inteligente de Livros da Sarah")
st.sidebar.markdown("""
### Como Utilizar:

1. Digite o nome do livro no campo principal
2. Clique no bot√£o **Buscar Livro**
3. Aguarde enquanto nossos agentes de IA coletam as informa√ß√µes

### Recursos Dispon√≠veis:
- Informa√ß√µes completas sobre o livro
- Compara√ß√£o de pre√ßos nas principais livrarias
- Recomenda√ß√µes personalizadas de livros similares

### Exemplos:
- 1984 (George Orwell)
- O Senhor dos An√©is
- Harry Potter e a Pedra Filosofal
- Sapiens (Yuval Noah Harari)

Desenvolvido com IA pela Data Science Academy
""")

# Bot√£o de suporte na barra lateral
if st.sidebar.button("‚úâÔ∏è Suporte"):
    st.sidebar.write("D√∫vidas ou sugest√µes? Envie e-mail para: victorfernandes_cpv@outlook.com")

# T√≠tulo principal
st.title("üìö Cat√°logo Inteligente de Livros")
st.markdown("""
Encontre informa√ß√µes detalhadas sobre qualquer livro, compare pre√ßos nas principais livrarias e descubra novas recomenda√ß√µes liter√°rias.
""")

# Caixa de texto para input do usu√°rio
book_query = st.text_input("Digite o nome do livro (e autor se poss√≠vel):")

# Se o usu√°rio pressionar o bot√£o, entramos neste bloco
if st.button("Buscar Livro"):
    if book_query:
        # Container principal para os resultados
        main_container = st.container()
        
        with main_container:
            st.subheader(f"Resultados para: {book_query}")
            
            # Se√ß√£o 1: Informa√ß√µes do Livro
            with st.spinner("Buscando informa√ß√µes sobre o livro..."):
                info_col, _ = st.columns([3, 1])
                with info_col:
                    st.markdown("### üìñ Informa√ß√µes do Livro")
                    book_info_response = dsa_agente_info_livros.run(f"Obtenha informa√ß√µes detalhadas sobre o livro: {book_query}")
                    clean_info = re.sub(r"Running:.*?\n\n", "", book_info_response.content, flags=re.DOTALL)
                    st.markdown(clean_info, unsafe_allow_html=True)
            
            # Se√ß√£o 3: Recomenda√ß√µes
            with st.spinner("Preparando recomenda√ß√µes personalizadas..."):
                st.markdown("### üîç Voc√™ Pode Gostar Tamb√©m")
                recommendations_response = dsa_agente_recomendacoes.run(f"Recomende 10 livros similares a: {book_query}")
                clean_recommendations = re.sub(r"Running:.*?\n\n", "", recommendations_response.content, flags=re.DOTALL)
                st.markdown(clean_recommendations, unsafe_allow_html=True)
    else:
        st.error("Por favor, digite o nome de um livro para buscar.")

# Rodap√©
st.markdown("---")
st.markdown("""
**Cat√°logo Inteligente de Livros** - Desenvolvido pelo seu grande amor <3
üìö Encontre seu pr√≥ximo livro favorito!
""")